/// <reference types="cypress" />

describe('Calculator tests', () => {
  beforeEach(() => {
    cy.visit('http://127.0.0.1:5500/')
})
  it("should display the number when the button is clicked", () => {
    cy.get(".number_btn").contains("1").click()
    cy.get(".number_btn").contains("0").click()
    cy.get(".number_btn").contains("2").click()
    cy.get(".number_btn").contains("3").click()
    cy.get(".number_btn").contains("4").click()
    cy.get(".number_btn").contains("5").click()
    cy.get(".number_btn").contains("6").click()
    cy.get(".number_btn").contains("7").click()
    cy.get(".number_btn").contains("8").click()
    cy.get(".number_btn").contains("9").click()
    cy.get(".calc_current_number_show").contains("1 023 456 789")
      .should("be.visible")
  })
  it("should add the number when clicked on '+' button", () => {
    cy.number()
    cy.get(".operation_btn").contains("+").click()
    cy.get(".calc_current_operation").contains("1023456789 +")
    cy.number()
    cy.get(".equals_btn").click()
    cy.get(".calc_current_operation").contains("1023456789 + 1023456789 =")
    cy.get(".calc_current_number_show").should("contain.text", "2 046 913 578")
    cy.get(".clear_btn").click()
    cy.get(".calc_current_number").should("contain.text", "0")
  })
  it("should substract the number when clicked on '-' button", () => {
    cy.number()
    cy.get(".operation_btn").contains("-").click()
    cy.get(".calc_current_operation").contains("1023456789 -")
    cy.number()
    cy.get(".equals_btn").click()
    cy.get(".calc_current_operation").contains("1023456789 - 1023456789 =")
    cy.get(".calc_current_number_show").should("contain.text", "0")
    cy.get(".clear_btn").click()
    cy.get(".calc_current_number").should("contain.text", "0")
  })
  it("should multiply the number when clicked on 'x' button", () => {
    cy.number()
    cy.get(".operation_btn").contains("×").click()
    cy.get(".calc_current_operation").should("contain.text", "1023456789 ×")
    cy.get(".number_btn").contains("2").click()
    cy.get(".equals_btn").click()
    cy.get(".calc_current_operation").should("contain.text", "1023456789 × 2 =")
    cy.get(".calc_current_number_show").should("contain.text", "2 046 913 578")
  })
  it("should divide the number when clicked on '÷' button", () => {
    cy.number()
    cy.get(".operation_btn").contains("÷").click()
    cy.get(".number_btn").contains("3").click()
    cy.get(".equals_btn").click()
    cy.get(".calc_current_operation").should("contain.text", "1023456789 ÷ 3 =")
    cy.get(".calc_current_number_show").should("contain.text", "341 152 263")
  })
  it("should properly calculate the percent of the already entered number", () => {
    cy.get(".number_btn").contains("1").click()
    cy.get(".number_btn").contains("0").click()
    cy.get(".number_btn").contains("0").click()
    cy.get(".number_btn").contains("0").click()
    cy.get(".operation_btn").contains("+").click()
    cy.get(".number_btn").contains("2").click()
    cy.get(".number_btn").contains("0").click()
    cy.get(".percent_btn").click()
    cy.get(".calc_current_operation").should("contain.text", "1000 + 200")
    cy.get(".calc_current_number_show").should("contain.text", "200")
    cy.get(".equals_btn").click()
    cy.get(".calc_current_number_show").should("contain.text", "1 200")
  })
  it("should undo already entered number", () => {
    cy.number()
    cy.get(".calc_current_number").should("contain.text", "1 023 456 789")
    for(let i=0; i<5; i++){
      cy.get(".undo_btn").click()
    }
    cy.get(".calc_current_number").should("contain.text", "10 234")
    cy.get(".clear_btn")
  })
  it("should properly calculate fraction from the entered number", () => {
    cy.number()
    cy.get(".fraction_btn").click()
    cy.get(".calc_current_operation").should("contain.text", "1/(1023456789)")
    cy.get(".calc_current_number_show").should("contain.text", "9.770808213379295e-10")
    cy.get(".clear_btn").click()
  })
  it("should properly calculate the power of the entered number", () => {
    cy.number()
    cy.get(".power_btn").click()
    cy.get(".calc_current_operation").should("contain.text", "sqr( 1023456789 )")
    cy.get(".calc_current_number").should("contain.text", "1 047 463 798 950 190 500")
    cy.get(".clear_btn").click()
  })
  it("should properly calculate the square root of the entered number", () => {
    cy.number()
    cy.get(".sqrt_btn").click()
    cy.get(".calc_current_operation").should("contain.text", "√( 1023456789 )")
    cy.get(".calc_current_number_show").should("contain.text", "31 991.51120219237")
    cy.get(".clear_btn").click()
  })
  it("should properly change between positive and negative numbers and add negative number", () => {
    cy.number()
    cy.get(".operation_btn").contains("+").click()
    cy.get(".number_btn").contains("7").click()
    cy.get(".number_btn").contains("8").click()
    cy.get(".number_btn").contains("9").click()
    cy.get(".oposite_btn").click()
    cy.get(".equals_btn").click()
    cy.get(".calc_current_operation").should("contain.text", "1023456789 + -789 =")
    cy.get(".calc_current_number_show").should("contain.text", "1 023 456 000")
    cy.get(".clear_btn").click()
  })
  it("should not allow to divide by zero and should display proper massage", () => {
    cy.get(".number_btn").contains("8").click()
    cy.get(".operation_btn").contains("÷").click()
    cy.get(".number_btn").contains("0").click()
    cy.get(".equals_btn").click()
    cy.get(".calc_current_number_show").should("contain.text", "division by zero is not allowed")
    cy.get(".operation_btn").should("be.disabled")
    cy.get(".percent_btn").should("be.disabled")
    cy.get(".fraction_btn").should("be.disabled")
    cy.get(".power_btn").should("be.disabled")
    cy.get(".sqrt_btn").should("be.disabled")
    cy.get(".oposite_btn").should("be.disabled")
    cy.get(".dot_btn").should("be.disabled")
    cy.get(".clear_btn").click()
  })
  it("should properly display infinity when reach the max range of numbers", () => {
    cy.number()
    for(let i=0; i<6; i++) {
      cy.get(".power_btn").click()
    }
    cy.get(".calc_current_number_show").should("contain.text", "Infinity")
    cy.get(".clear_btn").click()
  })
})
 